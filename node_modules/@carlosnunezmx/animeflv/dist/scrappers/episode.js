"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetResources = void 0;
const errors_js_1 = require("../errors.js");
const config_js_1 = __importDefault(require("../config.js"));
const fetch_js_1 = require("./fetch.js");
// This is an experimental, is possible to break any time
async function GetResources(Query) {
    if (!Query)
        throw new errors_js_1.ValidationError("Se requiere una Query para buscar", { Query: true });
    const $ = await (0, fetch_js_1.fetchResource)({ resource: config_js_1.default.baseURL + config_js_1.default.see + Query });
    let founded;
    $.querySelectorAll("script[type='text/javascript']:not([src])")
        .forEach((script) => {
        let text = script.innerHTML.trim();
        if (!text.includes("anime_id") || !text)
            return;
        const lines = text
            .split("\n")[7]
            .trim()
            .replace(";", "")
            .split("var videos = ")[1];
        founded = JSON.parse(lines);
    });
    if (!founded)
        throw new errors_js_1.HTML_PARSING_ERROR("founded", 'episode.ts', 'GetResources', 'founded');
    return founded;
}
exports.GetResources = GetResources;
